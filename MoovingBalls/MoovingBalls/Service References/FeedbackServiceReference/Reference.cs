//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace MoovingBalls.FeedbackServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://hujtomi.sandbox.proserver.hu/feedback", ConfigurationName="FeedbackServiceReference.FeedbackWebServiceSoap")]
    public interface FeedbackWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://hujtomi.sandbox.proserver.hu/feedback/MakeFeedback", ReplyAction="*")]
        System.IAsyncResult BeginMakeFeedback(MoovingBalls.FeedbackServiceReference.MakeFeedbackRequest request, System.AsyncCallback callback, object asyncState);
        
        MoovingBalls.FeedbackServiceReference.MakeFeedbackResponse EndMakeFeedback(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MakeFeedbackRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MakeFeedback", Namespace="http://hujtomi.sandbox.proserver.hu/feedback", Order=0)]
        public MoovingBalls.FeedbackServiceReference.MakeFeedbackRequestBody Body;
        
        public MakeFeedbackRequest() {
        }
        
        public MakeFeedbackRequest(MoovingBalls.FeedbackServiceReference.MakeFeedbackRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hujtomi.sandbox.proserver.hu/feedback")]
    public partial class MakeFeedbackRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string name;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string useremail;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string feedbacktext;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string gameName;
        
        public MakeFeedbackRequestBody() {
        }
        
        public MakeFeedbackRequestBody(string name, string useremail, string feedbacktext, string gameName) {
            this.name = name;
            this.useremail = useremail;
            this.feedbacktext = feedbacktext;
            this.gameName = gameName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MakeFeedbackResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MakeFeedbackResponse", Namespace="http://hujtomi.sandbox.proserver.hu/feedback", Order=0)]
        public MoovingBalls.FeedbackServiceReference.MakeFeedbackResponseBody Body;
        
        public MakeFeedbackResponse() {
        }
        
        public MakeFeedbackResponse(MoovingBalls.FeedbackServiceReference.MakeFeedbackResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://hujtomi.sandbox.proserver.hu/feedback")]
    public partial class MakeFeedbackResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string MakeFeedbackResult;
        
        public MakeFeedbackResponseBody() {
        }
        
        public MakeFeedbackResponseBody(string MakeFeedbackResult) {
            this.MakeFeedbackResult = MakeFeedbackResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FeedbackWebServiceSoapChannel : MoovingBalls.FeedbackServiceReference.FeedbackWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MakeFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MakeFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FeedbackWebServiceSoapClient : System.ServiceModel.ClientBase<MoovingBalls.FeedbackServiceReference.FeedbackWebServiceSoap>, MoovingBalls.FeedbackServiceReference.FeedbackWebServiceSoap {
        
        private BeginOperationDelegate onBeginMakeFeedbackDelegate;
        
        private EndOperationDelegate onEndMakeFeedbackDelegate;
        
        private System.Threading.SendOrPostCallback onMakeFeedbackCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public FeedbackWebServiceSoapClient() {
        }
        
        public FeedbackWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FeedbackWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedbackWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedbackWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<MakeFeedbackCompletedEventArgs> MakeFeedbackCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MoovingBalls.FeedbackServiceReference.FeedbackWebServiceSoap.BeginMakeFeedback(MoovingBalls.FeedbackServiceReference.MakeFeedbackRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMakeFeedback(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginMakeFeedback(string name, string useremail, string feedbacktext, string gameName, System.AsyncCallback callback, object asyncState) {
            MoovingBalls.FeedbackServiceReference.MakeFeedbackRequest inValue = new MoovingBalls.FeedbackServiceReference.MakeFeedbackRequest();
            inValue.Body = new MoovingBalls.FeedbackServiceReference.MakeFeedbackRequestBody();
            inValue.Body.name = name;
            inValue.Body.useremail = useremail;
            inValue.Body.feedbacktext = feedbacktext;
            inValue.Body.gameName = gameName;
            return ((MoovingBalls.FeedbackServiceReference.FeedbackWebServiceSoap)(this)).BeginMakeFeedback(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MoovingBalls.FeedbackServiceReference.MakeFeedbackResponse MoovingBalls.FeedbackServiceReference.FeedbackWebServiceSoap.EndMakeFeedback(System.IAsyncResult result) {
            return base.Channel.EndMakeFeedback(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndMakeFeedback(System.IAsyncResult result) {
            MoovingBalls.FeedbackServiceReference.MakeFeedbackResponse retVal = ((MoovingBalls.FeedbackServiceReference.FeedbackWebServiceSoap)(this)).EndMakeFeedback(result);
            return retVal.Body.MakeFeedbackResult;
        }
        
        private System.IAsyncResult OnBeginMakeFeedback(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string useremail = ((string)(inValues[1]));
            string feedbacktext = ((string)(inValues[2]));
            string gameName = ((string)(inValues[3]));
            return this.BeginMakeFeedback(name, useremail, feedbacktext, gameName, callback, asyncState);
        }
        
        private object[] OnEndMakeFeedback(System.IAsyncResult result) {
            string retVal = this.EndMakeFeedback(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMakeFeedbackCompleted(object state) {
            if ((this.MakeFeedbackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MakeFeedbackCompleted(this, new MakeFeedbackCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MakeFeedbackAsync(string name, string useremail, string feedbacktext, string gameName) {
            this.MakeFeedbackAsync(name, useremail, feedbacktext, gameName, null);
        }
        
        public void MakeFeedbackAsync(string name, string useremail, string feedbacktext, string gameName, object userState) {
            if ((this.onBeginMakeFeedbackDelegate == null)) {
                this.onBeginMakeFeedbackDelegate = new BeginOperationDelegate(this.OnBeginMakeFeedback);
            }
            if ((this.onEndMakeFeedbackDelegate == null)) {
                this.onEndMakeFeedbackDelegate = new EndOperationDelegate(this.OnEndMakeFeedback);
            }
            if ((this.onMakeFeedbackCompletedDelegate == null)) {
                this.onMakeFeedbackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMakeFeedbackCompleted);
            }
            base.InvokeAsync(this.onBeginMakeFeedbackDelegate, new object[] {
                        name,
                        useremail,
                        feedbacktext,
                        gameName}, this.onEndMakeFeedbackDelegate, this.onMakeFeedbackCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MoovingBalls.FeedbackServiceReference.FeedbackWebServiceSoap CreateChannel() {
            return new FeedbackWebServiceSoapClientChannel(this);
        }
        
        private class FeedbackWebServiceSoapClientChannel : ChannelBase<MoovingBalls.FeedbackServiceReference.FeedbackWebServiceSoap>, MoovingBalls.FeedbackServiceReference.FeedbackWebServiceSoap {
            
            public FeedbackWebServiceSoapClientChannel(System.ServiceModel.ClientBase<MoovingBalls.FeedbackServiceReference.FeedbackWebServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginMakeFeedback(MoovingBalls.FeedbackServiceReference.MakeFeedbackRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("MakeFeedback", _args, callback, asyncState);
                return _result;
            }
            
            public MoovingBalls.FeedbackServiceReference.MakeFeedbackResponse EndMakeFeedback(System.IAsyncResult result) {
                object[] _args = new object[0];
                MoovingBalls.FeedbackServiceReference.MakeFeedbackResponse _result = ((MoovingBalls.FeedbackServiceReference.MakeFeedbackResponse)(base.EndInvoke("MakeFeedback", _args, result)));
                return _result;
            }
        }
    }
}
